services:
  db:
    image: postgis/postgis
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - PGHOST=${SQL_HOST}
      - PGPORT=${SQL_PORT}
      - PGUSER=${SQL_USER}
      - PGDATABASE=${SQL_DATABASE}
      - PGPASSWORD=${SQL_PASSWORD}
    volumes:
      - jw-db:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGDATABASE: $SQL_DATABASE
      PGUSER: $SQL_USER
      PGPASSWORD: $SQL_PASSWORD
      PGHOST: $SQL_HOST
      PGPORT: $SQL_PORT
    ports:
      - 127.0.0.1:8100:8000
    volumes:
      - type: bind
        source: ./backend
        target: /backend
      - type: bind
        source: $DATA_DIR
        target: /data
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

volumes:
  jw-db: